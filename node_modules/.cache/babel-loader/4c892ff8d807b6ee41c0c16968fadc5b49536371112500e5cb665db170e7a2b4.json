{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || `HTTP error! status: ${response.status}`);\n      }\n      return data;\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Insurance Products\n  async getProducts() {\n    return this.request('/products');\n  }\n  async getProduct(slug) {\n    return this.request(`/products/${slug}`);\n  }\n  async createProduct(productData) {\n    return this.request('/products', {\n      method: 'POST',\n      body: JSON.stringify(productData)\n    });\n  }\n  async updateProduct(id, productData) {\n    return this.request(`/products/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(productData)\n    });\n  }\n  async deleteProduct(id) {\n    return this.request(`/products/${id}`, {\n      method: 'DELETE'\n    });\n  }\n\n  // Safety Call Requests\n  async getSafetyCalls(params = {}) {\n    const queryString = new URLSearchParams(params).toString();\n    return this.request(`/safety-calls?${queryString}`);\n  }\n  async getSafetyCall(id) {\n    return this.request(`/safety-calls/${id}`);\n  }\n  async createSafetyCall(safetyCallData) {\n    return this.request('/safety-calls', {\n      method: 'POST',\n      body: JSON.stringify(safetyCallData)\n    });\n  }\n  async updateSafetyCallStatus(id, statusData) {\n    return this.request(`/safety-calls/${id}/status`, {\n      method: 'PATCH',\n      body: JSON.stringify(statusData)\n    });\n  }\n  async getSafetyCallStats() {\n    return this.request('/safety-calls/stats/overview');\n  }\n\n  // Company Information\n  async getCompanyInfo() {\n    return this.request('/company/info');\n  }\n  async updateCompanyInfo(companyData) {\n    return this.request('/company/info', {\n      method: 'PUT',\n      body: JSON.stringify(companyData)\n    });\n  }\n\n  // Core Values\n  async getCoreValues() {\n    return this.request('/company/core-values');\n  }\n  async createCoreValue(coreValueData) {\n    return this.request('/company/core-values', {\n      method: 'POST',\n      body: JSON.stringify(coreValueData)\n    });\n  }\n  async updateCoreValue(id, coreValueData) {\n    return this.request(`/company/core-values/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(coreValueData)\n    });\n  }\n\n  // Founders\n  async getFounders() {\n    return this.request('/company/founders');\n  }\n  async createFounder(founderData) {\n    return this.request('/company/founders', {\n      method: 'POST',\n      body: JSON.stringify(founderData)\n    });\n  }\n  async updateFounder(id, founderData) {\n    return this.request(`/company/founders/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(founderData)\n    });\n  }\n\n  // Contact Information\n  async getContactInfo() {\n    return this.request('/company/contact');\n  }\n  async createContactInfo(contactData) {\n    return this.request('/company/contact', {\n      method: 'POST',\n      body: JSON.stringify(contactData)\n    });\n  }\n  async updateContactInfo(id, contactData) {\n    return this.request(`/company/contact/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(contactData)\n    });\n  }\n\n  // Content Sections\n  async getContentSection(section) {\n    return this.request(`/content/${section}`);\n  }\n  async updateContentSection(section, contentData) {\n    return this.request(`/content/${section}`, {\n      method: 'PUT',\n      body: JSON.stringify(contentData)\n    });\n  }\n\n  // Health Check\n  async healthCheck() {\n    return this.request('/health');\n  }\n}\n\n// Create and export a singleton instance\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","baseURL","request","endpoint","options","url","config","headers","response","fetch","data","json","ok","Error","message","status","error","console","getProducts","getProduct","slug","createProduct","productData","method","body","JSON","stringify","updateProduct","id","deleteProduct","getSafetyCalls","params","queryString","URLSearchParams","toString","getSafetyCall","createSafetyCall","safetyCallData","updateSafetyCallStatus","statusData","getSafetyCallStats","getCompanyInfo","updateCompanyInfo","companyData","getCoreValues","createCoreValue","coreValueData","updateCoreValue","getFounders","createFounder","founderData","updateFounder","getContactInfo","createContactInfo","contactData","updateContactInfo","getContentSection","section","updateContentSection","contentData","healthCheck","apiService"],"sources":["C:/Users/pkuma/Figma 4.0/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.baseURL = API_BASE_URL;\r\n  }\r\n\r\n  async request(endpoint, options = {}) {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Insurance Products\r\n  async getProducts() {\r\n    return this.request('/products');\r\n  }\r\n\r\n  async getProduct(slug) {\r\n    return this.request(`/products/${slug}`);\r\n  }\r\n\r\n  async createProduct(productData) {\r\n    return this.request('/products', {\r\n      method: 'POST',\r\n      body: JSON.stringify(productData),\r\n    });\r\n  }\r\n\r\n  async updateProduct(id, productData) {\r\n    return this.request(`/products/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(productData),\r\n    });\r\n  }\r\n\r\n  async deleteProduct(id) {\r\n    return this.request(`/products/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n\r\n  // Safety Call Requests\r\n  async getSafetyCalls(params = {}) {\r\n    const queryString = new URLSearchParams(params).toString();\r\n    return this.request(`/safety-calls?${queryString}`);\r\n  }\r\n\r\n  async getSafetyCall(id) {\r\n    return this.request(`/safety-calls/${id}`);\r\n  }\r\n\r\n  async createSafetyCall(safetyCallData) {\r\n    return this.request('/safety-calls', {\r\n      method: 'POST',\r\n      body: JSON.stringify(safetyCallData),\r\n    });\r\n  }\r\n\r\n  async updateSafetyCallStatus(id, statusData) {\r\n    return this.request(`/safety-calls/${id}/status`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(statusData),\r\n    });\r\n  }\r\n\r\n  async getSafetyCallStats() {\r\n    return this.request('/safety-calls/stats/overview');\r\n  }\r\n\r\n  // Company Information\r\n  async getCompanyInfo() {\r\n    return this.request('/company/info');\r\n  }\r\n\r\n  async updateCompanyInfo(companyData) {\r\n    return this.request('/company/info', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(companyData),\r\n    });\r\n  }\r\n\r\n  // Core Values\r\n  async getCoreValues() {\r\n    return this.request('/company/core-values');\r\n  }\r\n\r\n  async createCoreValue(coreValueData) {\r\n    return this.request('/company/core-values', {\r\n      method: 'POST',\r\n      body: JSON.stringify(coreValueData),\r\n    });\r\n  }\r\n\r\n  async updateCoreValue(id, coreValueData) {\r\n    return this.request(`/company/core-values/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(coreValueData),\r\n    });\r\n  }\r\n\r\n  // Founders\r\n  async getFounders() {\r\n    return this.request('/company/founders');\r\n  }\r\n\r\n  async createFounder(founderData) {\r\n    return this.request('/company/founders', {\r\n      method: 'POST',\r\n      body: JSON.stringify(founderData),\r\n    });\r\n  }\r\n\r\n  async updateFounder(id, founderData) {\r\n    return this.request(`/company/founders/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(founderData),\r\n    });\r\n  }\r\n\r\n  // Contact Information\r\n  async getContactInfo() {\r\n    return this.request('/company/contact');\r\n  }\r\n\r\n  async createContactInfo(contactData) {\r\n    return this.request('/company/contact', {\r\n      method: 'POST',\r\n      body: JSON.stringify(contactData),\r\n    });\r\n  }\r\n\r\n  async updateContactInfo(id, contactData) {\r\n    return this.request(`/company/contact/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(contactData),\r\n    });\r\n  }\r\n\r\n  // Content Sections\r\n  async getContentSection(section) {\r\n    return this.request(`/content/${section}`);\r\n  }\r\n\r\n  async updateContentSection(section, contentData) {\r\n    return this.request(`/content/${section}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(contentData),\r\n    });\r\n  }\r\n\r\n  // Health Check\r\n  async healthCheck() {\r\n    return this.request('/health');\r\n  }\r\n}\r\n\r\n// Create and export a singleton instance\r\nconst apiService = new ApiService();\r\nexport default apiService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}